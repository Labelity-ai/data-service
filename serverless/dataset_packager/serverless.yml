service: ${self:custom.serviceName}
app: data-service

plugins:
  - serverless-s3-local
  - serverless-offline

frameworkVersion: '2'

custom:
  serviceName: dataset-packager
  stage: ${opt:stage, self:custom.defaultStage}
  defaultStage: dev
  imagesBucket: labelity-use-${self:custom.stage}-images
  artifactsBucket: labelity-use-${self:custom.stage}-artifacts
  envFile: ${file(../env.${opt:stage, self:provider.stage}.json)}
  stages:
    - ${opt:stage}
    - dev
    - integration
    - production

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  region: us-east-1

  ecr:
    images:
      dataset_packager:
        path: ./

  usagePlan:
    quota:
      limit: 100
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 100
      rateLimit: 50

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: arn:aws:s3:::${self:custom.imagesBucket}/*
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: arn:aws:s3:::${self:custom.imagesBucket}/raw/*
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:PutObject"
        - "s3:GetObject"
      Resource: arn:aws:s3:::${self:custom.artifactsBucket}/*

functions:
  dataset_packager:
    image:
      name: dataset_packager
    memorySize: 512
    environment:
      IMAGES_BUCKET: ${self:custom.imagesBucket}
      OUTPUT_FOLDER: ${file(../env.${opt:stage, self:provider.stage}.json):DATASET_EXPORTING_RESULTS_FOLDER}
    events:
      - s3:
          bucket: ${self:custom.artifactsBucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: datasets/queue
